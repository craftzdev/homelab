---
- name: Check if ArgoCD namespace exists
  ansible.builtin.shell: kubectl get namespace argocd --no-headers 2>/dev/null | wc -l
  register: argocd_namespace_count
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  failed_when: false
  changed_when: false

- name: Create ArgoCD namespace
  kubernetes.core.k8s:
    name: argocd
    api_version: v1
    kind: Namespace
    state: present
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: argocd_namespace_count.stdout | int == 0

- name: Add ArgoCD Helm repository
  kubernetes.core.helm_repository:
    name: argo
    repo_url: https://argoproj.github.io/argo-helm
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: argocd_namespace_count.stdout | int == 0

- name: Install ArgoCD
  kubernetes.core.helm:
    name: argocd
    chart_ref: argo/argo-cd
    release_namespace: argocd
    values_files:
      - "{{ playbook_dir }}/../k8s-manifests/argocd-helm-chart-values.yaml"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: argocd_namespace_count.stdout | int == 0

- name: Wait for ArgoCD server to be ready
  ansible.builtin.shell: |
    kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=argocd-server -n argocd --timeout=300s
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: argocd_namespace_count.stdout | int == 0

- name: Apply ArgoCD applications
  kubernetes.core.k8s:
    state: present
    definition: "{{ item }}"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  with_file:
    - "{{ playbook_dir }}/../k8s-manifests/apps/projects.yaml"
    - "{{ playbook_dir }}/../k8s-manifests/apps/apps.yaml"
  when: argocd_namespace_count.stdout | int == 0