---

- name: Verify connectivity to all nodes
  hosts: all
  gather_facts: false
  tasks:
    - name: Ping
      ansible.builtin.ping:

- name: Install packages on all nodes
  hosts: all
  become: true
  roles:
    - 00-install-packages

- name: Prepare control plane nodes (HAProxy + Keepalived)
  hosts: kube_server
  become: true
  vars:
    api_vip: "172.16.40.100"
    vip_interface: "{{ ansible_default_ipv4.interface }}"
  roles:
    - 03-configure-haproxy
    - 04-configure-keepalived

- name: Prepare worker nodes (basic tools)
  hosts: kube_agents
  become: true
  tasks:
    - name: Ensure basic tools present
      ansible.builtin.package:
        name:
          - curl
          - ca-certificates
        state: present

- name: SSH setup (keys and sshd hardening)
  hosts: all
  become: true
  roles:
    - 01-ssh-keygen
    - 02-setup-sshd-config

- name: Initialize Kubernetes cluster (first control plane only)
  hosts: kube_server[0]
  become: true
  vars:
    api_vip: "172.16.40.100"
  roles:
    - 10-kubeadm-init

- name: Install CNI (first control plane only)
  hosts: kube_server[0]
  become: true
  vars:
    api_vip: "172.16.40.100"
  roles:
    - 13-install-cni

- name: Kubernetes join (control plane)
  hosts: kube_server
  become: true
  vars:
    join_config_dir: "/home/cloudinit"
    api_vip: "172.16.40.100"
  roles:
    - 11-kubeadm-join-cp

- name: Kubernetes join (workers)
  hosts: kube_agents
  become: true
  vars:
    join_config_dir: "/home/cloudinit"
  roles:
    - 12-kubeadm-join-wk

- name: Copy kubeconfig to users
  hosts: kube_server
  become: true
  vars:
    kubeconfig_user: "cloudinit"
    kubeconfig_home: "/home/cloudinit"
  roles:
    - 21-copy-kubeconfig

- name: Install ArgoCD (first control plane only)
  hosts: kube_server[0]
  become: true
  roles:
    - 14-install-argocd