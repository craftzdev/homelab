# Define the script used to check if haproxy is still working
vrrp_script chk_haproxy {
    script "/usr/bin/killall -0 haproxy"
    interval 2
    weight 2
}

# Configuration for Virtual Interface
vrrp_instance LB_VIP {
    interface {{ vip_interface | default(ansible_default_ipv4.interface) }}
    state {% if inventory_hostname == groups['kube_server'][0] %}MASTER{% else %}BACKUP{% endif %}
    priority {% if inventory_hostname == groups['kube_server'][0] %}101{% else %}100{% endif %}
    virtual_router_id 51

    authentication {
        auth_type AH
        auth_pass {{ vrrp_auth_pass | default('zaq12wsx') }}
    }

    unicast_src_ip {{ ansible_default_ipv4.address }}
    unicast_peer {
{% for host in groups['kube_server'] if host != inventory_hostname %}
        {{ hostvars[host].ansible_default_ipv4.address }}
{% endfor %}
    }

    # The virtual ip address shared between the loadbalancers
    virtual_ipaddress {
        {{ api_vip }}
    }

    # Use the Defined Script to Check whether to initiate a fail over
    track_script {
        chk_haproxy
    }
}